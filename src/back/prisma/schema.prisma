// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             Int     @id @default(autoincrement())
  login          String? @unique
  username       String  @unique
  avatar         String?
  hashedPassword String?
  twoFactor      String?

  personnal42Token String?
  refreshToken     String?
  accessToken      String?

  status      String @default("offline") // offline, online, ingame
  wins        Int    @default(0)
  losses      Int    @default(0)
  ladderLevel Int    @default(1)

  friends        Friend[]
  friendRequests Int[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  enabled2FA Boolean @default(false)
  secret2FA  String?
  qrCode2FA  String?

  blockedIds Int[]
}

model Friend {
  id       Int  @id @default(autoincrement())
  friendId Int
  chatId   Int
  user     User @relation(fields: [userId], references: [id])
  userId   Int
}

model FriendChat {
  id       Int             @id @default(autoincrement())
  room     String          @unique
  messages FriendMessage[]
}

model FriendMessage {
  id        Int        @id @default(autoincrement())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  senderId  Int
  text      String
  chat      FriendChat @relation(fields: [chatId], references: [id])
  chatId    Int
}

model Queue {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users     Int[]
}

model Channel {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users     Int[]
  admins    Int[]
  owner     Int

  bannedIds Int[]
  mutedIds  Int[]

  channelName String           @unique
  channelMode String
  password    String?
  messages    ChannelMessage[]
  isPrivate   Boolean          @default(false)
}

model ChannelMessage {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  senderId  Int
  text      String
  channel   Channel  @relation(fields: [channelId], references: [id])
  channelId Int
}
